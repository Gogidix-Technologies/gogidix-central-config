name: Security Scan - secrets-management

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scan on Sundays

env:
  JAVA_VERSION: '17'
  SERVICE_NAME: secrets-management

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Run OWASP Dependency Check
      run: mvn org.owasp:dependency-check-maven:check
      working-directory: central-configuration/secrets-management
      
    - name: Upload dependency check results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-check-report
        path: central-configuration/secrets-management/target/dependency-check-report.html
        
  container-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Build Docker image
      run: docker build -t secrets-management:scan .
      working-directory: central-configuration/secrets-management
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'secrets-management:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        
    - name: Upload Trivy scan results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
        
  code-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java
        
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Build project
      run: mvn clean compile
      working-directory: central-configuration/secrets-management
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
  secrets-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  license-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: FOSSA Scan
      uses: fossas/fossa-action@main
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}
        
  security-report:
    runs-on: ubuntu-latest
    needs: [dependency-check, container-scan, code-scan, secrets-scan, license-scan]
    if: always()
    
    steps:
    - name: Generate security report summary
      run: |
        echo "Security scan completed. Check individual job results for details."
        echo "- Dependency vulnerabilities: Check OWASP report"
        echo "- Container vulnerabilities: Check Trivy results"
        echo "- Code vulnerabilities: Check CodeQL results"
        echo "- Secrets detection: Check GitLeaks results"
        echo "- License compliance: Check FOSSA results"
